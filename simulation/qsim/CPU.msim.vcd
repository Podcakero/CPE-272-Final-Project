$comment
	File created using the following command:
		vcd file CPU.msim.vcd -direction
$end
$date
	Mon Nov 30 15:35:04 2020
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module cpu_vhd_vec_tst $end
$var wire 1 ! aOut [7] $end
$var wire 1 " aOut [6] $end
$var wire 1 # aOut [5] $end
$var wire 1 $ aOut [4] $end
$var wire 1 % aOut [3] $end
$var wire 1 & aOut [2] $end
$var wire 1 ' aOut [1] $end
$var wire 1 ( aOut [0] $end
$var wire 1 ) clk $end
$var wire 1 * incrementOut $end
$var wire 1 + irOutput [7] $end
$var wire 1 , irOutput [6] $end
$var wire 1 - irOutput [5] $end
$var wire 1 . irOutput [4] $end
$var wire 1 / irOutput [3] $end
$var wire 1 0 irOutput [2] $end
$var wire 1 1 irOutput [1] $end
$var wire 1 2 irOutput [0] $end
$var wire 1 3 marOut [7] $end
$var wire 1 4 marOut [6] $end
$var wire 1 5 marOut [5] $end
$var wire 1 6 marOut [4] $end
$var wire 1 7 marOut [3] $end
$var wire 1 8 marOut [2] $end
$var wire 1 9 marOut [1] $end
$var wire 1 : marOut [0] $end
$var wire 1 ; mdriOutput [7] $end
$var wire 1 < mdriOutput [6] $end
$var wire 1 = mdriOutput [5] $end
$var wire 1 > mdriOutput [4] $end
$var wire 1 ? mdriOutput [3] $end
$var wire 1 @ mdriOutput [2] $end
$var wire 1 A mdriOutput [1] $end
$var wire 1 B mdriOutput [0] $end
$var wire 1 C mdroOutput [7] $end
$var wire 1 D mdroOutput [6] $end
$var wire 1 E mdroOutput [5] $end
$var wire 1 F mdroOutput [4] $end
$var wire 1 G mdroOutput [3] $end
$var wire 1 H mdroOutput [2] $end
$var wire 1 I mdroOutput [1] $end
$var wire 1 J mdroOutput [0] $end
$var wire 1 K pcOut [7] $end
$var wire 1 L pcOut [6] $end
$var wire 1 M pcOut [5] $end
$var wire 1 N pcOut [4] $end
$var wire 1 O pcOut [3] $end
$var wire 1 P pcOut [2] $end
$var wire 1 Q pcOut [1] $end
$var wire 1 R pcOut [0] $end

$scope module i1 $end
$var wire 1 S gnd $end
$var wire 1 T vcc $end
$var wire 1 U unknown $end
$var wire 1 V devoe $end
$var wire 1 W devclrn $end
$var wire 1 X devpor $end
$var wire 1 Y ww_devoe $end
$var wire 1 Z ww_devclrn $end
$var wire 1 [ ww_devpor $end
$var wire 1 \ ww_clk $end
$var wire 1 ] ww_pcOut [7] $end
$var wire 1 ^ ww_pcOut [6] $end
$var wire 1 _ ww_pcOut [5] $end
$var wire 1 ` ww_pcOut [4] $end
$var wire 1 a ww_pcOut [3] $end
$var wire 1 b ww_pcOut [2] $end
$var wire 1 c ww_pcOut [1] $end
$var wire 1 d ww_pcOut [0] $end
$var wire 1 e ww_marOut [7] $end
$var wire 1 f ww_marOut [6] $end
$var wire 1 g ww_marOut [5] $end
$var wire 1 h ww_marOut [4] $end
$var wire 1 i ww_marOut [3] $end
$var wire 1 j ww_marOut [2] $end
$var wire 1 k ww_marOut [1] $end
$var wire 1 l ww_marOut [0] $end
$var wire 1 m ww_irOutput [7] $end
$var wire 1 n ww_irOutput [6] $end
$var wire 1 o ww_irOutput [5] $end
$var wire 1 p ww_irOutput [4] $end
$var wire 1 q ww_irOutput [3] $end
$var wire 1 r ww_irOutput [2] $end
$var wire 1 s ww_irOutput [1] $end
$var wire 1 t ww_irOutput [0] $end
$var wire 1 u ww_mdriOutput [7] $end
$var wire 1 v ww_mdriOutput [6] $end
$var wire 1 w ww_mdriOutput [5] $end
$var wire 1 x ww_mdriOutput [4] $end
$var wire 1 y ww_mdriOutput [3] $end
$var wire 1 z ww_mdriOutput [2] $end
$var wire 1 { ww_mdriOutput [1] $end
$var wire 1 | ww_mdriOutput [0] $end
$var wire 1 } ww_mdroOutput [7] $end
$var wire 1 ~ ww_mdroOutput [6] $end
$var wire 1 !! ww_mdroOutput [5] $end
$var wire 1 "! ww_mdroOutput [4] $end
$var wire 1 #! ww_mdroOutput [3] $end
$var wire 1 $! ww_mdroOutput [2] $end
$var wire 1 %! ww_mdroOutput [1] $end
$var wire 1 &! ww_mdroOutput [0] $end
$var wire 1 '! ww_aOut [7] $end
$var wire 1 (! ww_aOut [6] $end
$var wire 1 )! ww_aOut [5] $end
$var wire 1 *! ww_aOut [4] $end
$var wire 1 +! ww_aOut [3] $end
$var wire 1 ,! ww_aOut [2] $end
$var wire 1 -! ww_aOut [1] $end
$var wire 1 .! ww_aOut [0] $end
$var wire 1 /! ww_incrementOut $end
$var wire 1 0! \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [4] $end
$var wire 1 1! \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [3] $end
$var wire 1 2! \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [2] $end
$var wire 1 3! \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [1] $end
$var wire 1 4! \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [0] $end
$var wire 1 5! \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [4] $end
$var wire 1 6! \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [3] $end
$var wire 1 7! \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [2] $end
$var wire 1 8! \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [1] $end
$var wire 1 9! \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [0] $end
$var wire 1 :! \CU|current_state.staa_write_mem~clkctrl_INCLK_bus\ [3] $end
$var wire 1 ;! \CU|current_state.staa_write_mem~clkctrl_INCLK_bus\ [2] $end
$var wire 1 <! \CU|current_state.staa_write_mem~clkctrl_INCLK_bus\ [1] $end
$var wire 1 =! \CU|current_state.staa_write_mem~clkctrl_INCLK_bus\ [0] $end
$var wire 1 >! \clk~inputclkctrl_INCLK_bus\ [3] $end
$var wire 1 ?! \clk~inputclkctrl_INCLK_bus\ [2] $end
$var wire 1 @! \clk~inputclkctrl_INCLK_bus\ [1] $end
$var wire 1 A! \clk~inputclkctrl_INCLK_bus\ [0] $end
$var wire 1 B! \~QUARTUS_CREATED_GND~I_combout\ $end
$var wire 1 C! \~QUARTUS_CREATED_UNVM~~busy\ $end
$var wire 1 D! \~QUARTUS_CREATED_ADC1~~eoc\ $end
$var wire 1 E! \~QUARTUS_CREATED_ADC2~~eoc\ $end
$var wire 1 F! \pcOut[0]~output_o\ $end
$var wire 1 G! \pcOut[1]~output_o\ $end
$var wire 1 H! \pcOut[2]~output_o\ $end
$var wire 1 I! \pcOut[3]~output_o\ $end
$var wire 1 J! \pcOut[4]~output_o\ $end
$var wire 1 K! \pcOut[5]~output_o\ $end
$var wire 1 L! \pcOut[6]~output_o\ $end
$var wire 1 M! \pcOut[7]~output_o\ $end
$var wire 1 N! \marOut[0]~output_o\ $end
$var wire 1 O! \marOut[1]~output_o\ $end
$var wire 1 P! \marOut[2]~output_o\ $end
$var wire 1 Q! \marOut[3]~output_o\ $end
$var wire 1 R! \marOut[4]~output_o\ $end
$var wire 1 S! \marOut[5]~output_o\ $end
$var wire 1 T! \marOut[6]~output_o\ $end
$var wire 1 U! \marOut[7]~output_o\ $end
$var wire 1 V! \irOutput[0]~output_o\ $end
$var wire 1 W! \irOutput[1]~output_o\ $end
$var wire 1 X! \irOutput[2]~output_o\ $end
$var wire 1 Y! \irOutput[3]~output_o\ $end
$var wire 1 Z! \irOutput[4]~output_o\ $end
$var wire 1 [! \irOutput[5]~output_o\ $end
$var wire 1 \! \irOutput[6]~output_o\ $end
$var wire 1 ]! \irOutput[7]~output_o\ $end
$var wire 1 ^! \mdriOutput[0]~output_o\ $end
$var wire 1 _! \mdriOutput[1]~output_o\ $end
$var wire 1 `! \mdriOutput[2]~output_o\ $end
$var wire 1 a! \mdriOutput[3]~output_o\ $end
$var wire 1 b! \mdriOutput[4]~output_o\ $end
$var wire 1 c! \mdriOutput[5]~output_o\ $end
$var wire 1 d! \mdriOutput[6]~output_o\ $end
$var wire 1 e! \mdriOutput[7]~output_o\ $end
$var wire 1 f! \mdroOutput[0]~output_o\ $end
$var wire 1 g! \mdroOutput[1]~output_o\ $end
$var wire 1 h! \mdroOutput[2]~output_o\ $end
$var wire 1 i! \mdroOutput[3]~output_o\ $end
$var wire 1 j! \mdroOutput[4]~output_o\ $end
$var wire 1 k! \mdroOutput[5]~output_o\ $end
$var wire 1 l! \mdroOutput[6]~output_o\ $end
$var wire 1 m! \mdroOutput[7]~output_o\ $end
$var wire 1 n! \aOut[0]~output_o\ $end
$var wire 1 o! \aOut[1]~output_o\ $end
$var wire 1 p! \aOut[2]~output_o\ $end
$var wire 1 q! \aOut[3]~output_o\ $end
$var wire 1 r! \aOut[4]~output_o\ $end
$var wire 1 s! \aOut[5]~output_o\ $end
$var wire 1 t! \aOut[6]~output_o\ $end
$var wire 1 u! \aOut[7]~output_o\ $end
$var wire 1 v! \incrementOut~output_o\ $end
$var wire 1 w! \clk~input_o\ $end
$var wire 1 x! \clk~inputclkctrl_outclk\ $end
$var wire 1 y! \PC|counter[1]~8_combout\ $end
$var wire 1 z! \PC|counter[1]~9\ $end
$var wire 1 {! \PC|counter[2]~10_combout\ $end
$var wire 1 |! \PC|counter[2]~11\ $end
$var wire 1 }! \PC|counter[3]~12_combout\ $end
$var wire 1 ~! \PC|counter[3]~13\ $end
$var wire 1 !" \PC|counter[4]~14_combout\ $end
$var wire 1 "" \memory|Z~27_combout\ $end
$var wire 1 #" \memory|Z~28_combout\ $end
$var wire 1 $" \MemoryDataInput|output[0]~feeder_combout\ $end
$var wire 1 %" \memory|Z~23_combout\ $end
$var wire 1 &" \memory|Z~24_combout\ $end
$var wire 1 '" \instruction|output[7]~feeder_combout\ $end
$var wire 1 (" \CU|current_state.load_mar~0_combout\ $end
$var wire 1 )" \CU|current_state.load_mar~feeder_combout\ $end
$var wire 1 *" \CU|current_state.load_mar~q\ $end
$var wire 1 +" \CU|current_state.read_mem~0_combout\ $end
$var wire 1 ," \CU|current_state.read_mem~q\ $end
$var wire 1 -" \CU|current_state.load_mdri~feeder_combout\ $end
$var wire 1 ." \CU|current_state.load_mdri~q\ $end
$var wire 1 /" \CU|current_state.load_ir~feeder_combout\ $end
$var wire 1 0" \CU|current_state.load_ir~q\ $end
$var wire 1 1" \CU|current_state.staa_write_mem~clkctrl_outclk\ $end
$var wire 1 2" \CU|ToIrLoad~combout\ $end
$var wire 1 3" \memory|Z~22_combout\ $end
$var wire 1 4" \instruction|output[6]~feeder_combout\ $end
$var wire 1 5" \CU|Selector8~0_combout\ $end
$var wire 1 6" \CU|Selector8~1_combout\ $end
$var wire 1 7" \CU|current_state.decode~q\ $end
$var wire 1 8" \CU|current_state~20_combout\ $end
$var wire 1 9" \CU|current_state.adaa_load_mar~feeder_combout\ $end
$var wire 1 :" \CU|current_state.adaa_load_mar~q\ $end
$var wire 1 ;" \CU|current_state.adaa_read_mem~q\ $end
$var wire 1 <" \CU|current_state.adaa_load_mdri~q\ $end
$var wire 1 =" \CU|current_state~19_combout\ $end
$var wire 1 >" \CU|current_state.ldaa_load_mar~feeder_combout\ $end
$var wire 1 ?" \CU|current_state.ldaa_load_mar~q\ $end
$var wire 1 @" \CU|current_state.ldaa_read_mem~q\ $end
$var wire 1 A" \CU|current_state.ldaa_load_mdri~feeder_combout\ $end
$var wire 1 B" \CU|current_state.ldaa_load_mdri~q\ $end
$var wire 1 C" \CU|WideOr19~0_combout\ $end
$var wire 1 D" \CU|ToMdriLoad~combout\ $end
$var wire 1 E" \CU|ToMarMux~combout\ $end
$var wire 1 F" \MARmux|output[0]~0_combout\ $end
$var wire 1 G" \CU|WideOr17~0_combout\ $end
$var wire 1 H" \CU|ToMarLoad~combout\ $end
$var wire 1 I" \memory|Z~18_combout\ $end
$var wire 1 J" \memory|Z~19_combout\ $end
$var wire 1 K" \instruction|output[4]~feeder_combout\ $end
$var wire 1 L" \MARmux|output[4]~4_combout\ $end
$var wire 1 M" \memory|Z~14_combout\ $end
$var wire 1 N" \memory|Z~15_combout\ $end
$var wire 1 O" \instruction|output[1]~feeder_combout\ $end
$var wire 1 P" \MARmux|output[1]~1_combout\ $end
$var wire 1 Q" \memory|Z~16_combout\ $end
$var wire 1 R" \memory|Z~17_combout\ $end
$var wire 1 S" \instruction|output[2]~feeder_combout\ $end
$var wire 1 T" \MARmux|output[2]~2_combout\ $end
$var wire 1 U" \memory|Z~25_combout\ $end
$var wire 1 V" \memory|Z~26_combout\ $end
$var wire 1 W" \MemoryDataInput|output[3]~feeder_combout\ $end
$var wire 1 X" \instruction|output[3]~feeder_combout\ $end
$var wire 1 Y" \MARmux|output[3]~3_combout\ $end
$var wire 1 Z" \memory|Z~20_combout\ $end
$var wire 1 [" \memory|Z~21_combout\ $end
$var wire 1 \" \instruction|output[5]~feeder_combout\ $end
$var wire 1 ]" \CU|current_state~18_combout\ $end
$var wire 1 ^" \CU|current_state.staa_load_mdro~q\ $end
$var wire 1 _" \CU|current_state.staa_write_mem~feeder_combout\ $end
$var wire 1 `" \CU|current_state.staa_write_mem~q\ $end
$var wire 1 a" \CU|current_state.adaa_store_load_a~q\ $end
$var wire 1 b" \CU|current_state.ldaa_load_a~q\ $end
$var wire 1 c" \CU|Selector16~0_combout\ $end
$var wire 1 d" \CU|current_state.increment_pc~feeder_combout\ $end
$var wire 1 e" \CU|current_state.increment_pc~q\ $end
$var wire 1 f" \CU|ToPcIncrement~combout\ $end
$var wire 1 g" \PC|counter[0]~7_combout\ $end
$var wire 1 h" \PC|counter[4]~15\ $end
$var wire 1 i" \PC|counter[5]~16_combout\ $end
$var wire 1 j" \PC|counter[5]~17\ $end
$var wire 1 k" \PC|counter[6]~18_combout\ $end
$var wire 1 l" \PC|counter[6]~19\ $end
$var wire 1 m" \PC|counter[7]~20_combout\ $end
$var wire 1 n" \accumulator|output[0]~feeder_combout\ $end
$var wire 1 o" \CU|ToALoad~0_combout\ $end
$var wire 1 p" \ArithmeticLogicUnit|Add0~0_combout\ $end
$var wire 1 q" \ArithmeticLogicUnit|Add0~2_combout\ $end
$var wire 1 r" \accumulator|output[1]~feeder_combout\ $end
$var wire 1 s" \ArithmeticLogicUnit|Add0~1\ $end
$var wire 1 t" \ArithmeticLogicUnit|Add0~3_combout\ $end
$var wire 1 u" \ArithmeticLogicUnit|Add0~5_combout\ $end
$var wire 1 v" \accumulator|output[2]~feeder_combout\ $end
$var wire 1 w" \ArithmeticLogicUnit|Add0~4\ $end
$var wire 1 x" \ArithmeticLogicUnit|Add0~6_combout\ $end
$var wire 1 y" \ArithmeticLogicUnit|Add0~8_combout\ $end
$var wire 1 z" \accumulator|output[3]~feeder_combout\ $end
$var wire 1 {" \ArithmeticLogicUnit|Add0~7\ $end
$var wire 1 |" \ArithmeticLogicUnit|Add0~9_combout\ $end
$var wire 1 }" \ArithmeticLogicUnit|Add0~11_combout\ $end
$var wire 1 ~" \accumulator|output[4]~feeder_combout\ $end
$var wire 1 !# \ArithmeticLogicUnit|Add0~10\ $end
$var wire 1 "# \ArithmeticLogicUnit|Add0~12_combout\ $end
$var wire 1 ## \ArithmeticLogicUnit|Add0~14_combout\ $end
$var wire 1 $# \accumulator|output[5]~feeder_combout\ $end
$var wire 1 %# \ArithmeticLogicUnit|Add0~13\ $end
$var wire 1 &# \ArithmeticLogicUnit|Add0~15_combout\ $end
$var wire 1 '# \ArithmeticLogicUnit|Add0~17_combout\ $end
$var wire 1 (# \accumulator|output[6]~feeder_combout\ $end
$var wire 1 )# \ArithmeticLogicUnit|Add0~16\ $end
$var wire 1 *# \ArithmeticLogicUnit|Add0~18_combout\ $end
$var wire 1 +# \ArithmeticLogicUnit|Add0~20_combout\ $end
$var wire 1 ,# \accumulator|output[7]~feeder_combout\ $end
$var wire 1 -# \ArithmeticLogicUnit|Add0~19\ $end
$var wire 1 .# \ArithmeticLogicUnit|Add0~21_combout\ $end
$var wire 1 /# \ArithmeticLogicUnit|Add0~23_combout\ $end
$var wire 1 0# \PC|counter\ [31] $end
$var wire 1 1# \PC|counter\ [30] $end
$var wire 1 2# \PC|counter\ [29] $end
$var wire 1 3# \PC|counter\ [28] $end
$var wire 1 4# \PC|counter\ [27] $end
$var wire 1 5# \PC|counter\ [26] $end
$var wire 1 6# \PC|counter\ [25] $end
$var wire 1 7# \PC|counter\ [24] $end
$var wire 1 8# \PC|counter\ [23] $end
$var wire 1 9# \PC|counter\ [22] $end
$var wire 1 :# \PC|counter\ [21] $end
$var wire 1 ;# \PC|counter\ [20] $end
$var wire 1 <# \PC|counter\ [19] $end
$var wire 1 =# \PC|counter\ [18] $end
$var wire 1 ># \PC|counter\ [17] $end
$var wire 1 ?# \PC|counter\ [16] $end
$var wire 1 @# \PC|counter\ [15] $end
$var wire 1 A# \PC|counter\ [14] $end
$var wire 1 B# \PC|counter\ [13] $end
$var wire 1 C# \PC|counter\ [12] $end
$var wire 1 D# \PC|counter\ [11] $end
$var wire 1 E# \PC|counter\ [10] $end
$var wire 1 F# \PC|counter\ [9] $end
$var wire 1 G# \PC|counter\ [8] $end
$var wire 1 H# \PC|counter\ [7] $end
$var wire 1 I# \PC|counter\ [6] $end
$var wire 1 J# \PC|counter\ [5] $end
$var wire 1 K# \PC|counter\ [4] $end
$var wire 1 L# \PC|counter\ [3] $end
$var wire 1 M# \PC|counter\ [2] $end
$var wire 1 N# \PC|counter\ [1] $end
$var wire 1 O# \PC|counter\ [0] $end
$var wire 1 P# \memory|Data_out\ [7] $end
$var wire 1 Q# \memory|Data_out\ [6] $end
$var wire 1 R# \memory|Data_out\ [5] $end
$var wire 1 S# \memory|Data_out\ [4] $end
$var wire 1 T# \memory|Data_out\ [3] $end
$var wire 1 U# \memory|Data_out\ [2] $end
$var wire 1 V# \memory|Data_out\ [1] $end
$var wire 1 W# \memory|Data_out\ [0] $end
$var wire 1 X# \MemoryAccess|output\ [7] $end
$var wire 1 Y# \MemoryAccess|output\ [6] $end
$var wire 1 Z# \MemoryAccess|output\ [5] $end
$var wire 1 [# \MemoryAccess|output\ [4] $end
$var wire 1 \# \MemoryAccess|output\ [3] $end
$var wire 1 ]# \MemoryAccess|output\ [2] $end
$var wire 1 ^# \MemoryAccess|output\ [1] $end
$var wire 1 _# \MemoryAccess|output\ [0] $end
$var wire 1 `# \MemoryDataOuput|output\ [7] $end
$var wire 1 a# \MemoryDataOuput|output\ [6] $end
$var wire 1 b# \MemoryDataOuput|output\ [5] $end
$var wire 1 c# \MemoryDataOuput|output\ [4] $end
$var wire 1 d# \MemoryDataOuput|output\ [3] $end
$var wire 1 e# \MemoryDataOuput|output\ [2] $end
$var wire 1 f# \MemoryDataOuput|output\ [1] $end
$var wire 1 g# \MemoryDataOuput|output\ [0] $end
$var wire 1 h# \instruction|output\ [7] $end
$var wire 1 i# \instruction|output\ [6] $end
$var wire 1 j# \instruction|output\ [5] $end
$var wire 1 k# \instruction|output\ [4] $end
$var wire 1 l# \instruction|output\ [3] $end
$var wire 1 m# \instruction|output\ [2] $end
$var wire 1 n# \instruction|output\ [1] $end
$var wire 1 o# \instruction|output\ [0] $end
$var wire 1 p# \MemoryDataInput|output\ [7] $end
$var wire 1 q# \MemoryDataInput|output\ [6] $end
$var wire 1 r# \MemoryDataInput|output\ [5] $end
$var wire 1 s# \MemoryDataInput|output\ [4] $end
$var wire 1 t# \MemoryDataInput|output\ [3] $end
$var wire 1 u# \MemoryDataInput|output\ [2] $end
$var wire 1 v# \MemoryDataInput|output\ [1] $end
$var wire 1 w# \MemoryDataInput|output\ [0] $end
$var wire 1 x# \accumulator|output\ [7] $end
$var wire 1 y# \accumulator|output\ [6] $end
$var wire 1 z# \accumulator|output\ [5] $end
$var wire 1 {# \accumulator|output\ [4] $end
$var wire 1 |# \accumulator|output\ [3] $end
$var wire 1 }# \accumulator|output\ [2] $end
$var wire 1 ~# \accumulator|output\ [1] $end
$var wire 1 !$ \accumulator|output\ [0] $end
$var wire 1 "$ \MemoryAccess|ALT_INV_output\ [1] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0)
0*
0S
1T
xU
1V
1W
1X
1Y
1Z
1[
0\
0/!
0B!
zC!
zD!
zE!
0F!
0G!
0H!
0I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
1|!
0}!
0~!
0!"
1""
1#"
0$"
0%"
0&"
0'"
1("
1)"
0*"
1+"
0,"
0-"
0."
0/"
00"
01"
02"
13"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
1E"
0F"
1G"
1H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
1R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
1h"
0i"
0j"
0k"
1l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
1w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
1!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
1)#
0*#
0+#
0,#
0-#
0.#
0/#
0K
0L
0M
0N
0O
0P
0Q
0R
03
04
05
06
07
08
09
0:
0+
0,
0-
0.
0/
00
01
02
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0!
0"
0#
0$
0%
0&
0'
0(
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
x0#
x1#
x2#
x3#
x4#
x5#
x6#
x7#
x8#
x9#
x:#
x;#
x<#
x=#
x>#
x?#
x@#
xA#
xB#
xC#
xD#
xE#
xF#
xG#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
xX#
xY#
xZ#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
1"$
1>!
1?!
1@!
0A!
1:!
1;!
1<!
0=!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
$end
#10000
1)
1\
1w!
1A!
1x!
1W#
1*"
1,"
1U#
1-"
0+"
0E"
0G"
1$"
0H"
#20000
0)
0\
0w!
0A!
0x!
#30000
1)
1\
1w!
1A!
1x!
0,"
1."
1/"
1C"
0-"
1D"
#40000
0)
0\
0w!
0A!
0x!
#50000
1)
1\
1w!
1A!
1x!
0."
10"
1w#
1u#
1`!
1^!
1S"
1x"
1p"
12"
16"
0/"
0C"
1z
1|
0D"
1q"
1y"
1B
1@
1v"
1n"
#60000
0)
0\
0w!
0A!
0x!
#70000
1)
1\
1w!
1A!
1x!
00"
17"
1o#
1m#
1X!
1V!
1T"
1F"
1="
02"
06"
1r
1t
1>"
12
10
#80000
0)
0\
0w!
0A!
0x!
#90000
1)
1\
1w!
1A!
1x!
07"
1?"
1G"
0="
0>"
1H"
#100000
0)
0\
0w!
0A!
0x!
#110000
1)
1\
1w!
1A!
1x!
0?"
1@"
1_#
1]#
1S!
1Q!
0""
0R"
1U"
0#"
1N"
1A"
0G"
1g
1i
0H"
1V"
17
15
#120000
0)
0\
0w!
0A!
0x!
#130000
1)
1\
1w!
1A!
1x!
0W#
0@"
1B"
1V#
0U#
1T#
1W"
1C"
0A"
0$"
1D"
#140000
0)
0\
0w!
0A!
0x!
#150000
1)
1\
1w!
1A!
1x!
0B"
0w#
1v#
0u#
1t#
1b"
1a!
0`!
1_!
0^!
1c"
1o"
1X"
1|"
1}"
0S"
0x"
0y"
1O"
1t"
1u"
0p"
0q"
0C"
1y
0z
1{
0|
0D"
0n"
1r"
0v"
1z"
1d"
0B
1A
0@
1?
#160000
0)
0\
0w!
0A!
0x!
#170000
1)
1\
1w!
1A!
1x!
0b"
1e"
1~#
1|#
1q!
1o!
0|"
0!#
0t"
0w"
0("
1f"
0c"
0o"
1+!
1-!
1v!
0d"
1g"
0)"
1x"
0u"
1"#
0}"
1'
1%
1/!
0z"
1##
0r"
1y"
1*
1v"
1~"
#180000
0)
0\
0w!
0A!
0x!
#190000
1)
1\
1w!
1A!
1x!
0*"
0e"
1O#
1F!
1y!
0g"
1("
0f"
1+"
1E"
1G"
1d
0v!
1H"
0T"
1g"
1)"
1R
0/!
0*
#200000
0)
0\
0w!
0A!
0x!
#210000
1)
1\
1w!
1A!
1x!
1*"
1,"
0]#
0S!
1""
03"
1R"
0U"
0V"
1["
1-"
0+"
0E"
0G"
0g
0H"
1T"
05
#220000
0)
0\
0w!
0A!
0x!
#230000
1)
1\
1w!
1A!
1x!
0,"
1."
1U#
0T#
1R#
0W"
1/"
1C"
0-"
1D"
#240000
0)
0\
0w!
0A!
0x!
#250000
1)
1\
1w!
1A!
1x!
0."
10"
1u#
0t#
1r#
1c!
0a!
1`!
1\"
1&#
0X"
1|"
1!#
1S"
0x"
1{"
12"
16"
0/"
0C"
1w
0y
1z
0D"
0|"
0!#
0y"
0"#
1}"
1'#
1@
0?
1=
1$#
1z"
0##
0v"
1"#
0}"
0z"
1##
0~"
1~"
#260000
0)
0\
0w!
0A!
0x!
#270000
1)
1\
1w!
1A!
1x!
00"
17"
0o#
1n#
1j#
1[!
1W!
0V!
1P"
0F"
18"
02"
06"
1o
1s
0t
19"
02
11
1-
#280000
0)
0\
0w!
0A!
0x!
#290000
1)
1\
1w!
1A!
1x!
07"
1:"
1G"
08"
09"
1H"
#300000
0)
0\
0w!
0A!
0x!
#310000
1)
1\
1w!
1A!
1x!
0:"
1;"
0_#
1^#
1]#
0"$
1S!
1R!
0Q!
0""
1Z"
1#"
1J"
0N"
0G"
1g
1h
0i
0H"
0["
0#"
07
16
15
#320000
0)
0\
0w!
0A!
0x!
#330000
1)
1\
1w!
1A!
1x!
0;"
1<"
1S#
0V#
0R#
1C"
1D"
#340000
0)
0\
0w!
0A!
0x!
#350000
1)
1\
1w!
1A!
1x!
0<"
1s#
0v#
0r#
1a"
0c!
0_!
1b!
1c"
1o"
0\"
0&#
0O"
1t"
1w"
1K"
0"#
1%#
0C"
0w
0{
1x
0D"
1&#
0##
1x"
0{"
1u"
0'#
1d"
0A
1>
0=
0$#
1r"
1|"
1!#
1y"
0~"
1'#
1$#
1v"
1"#
0%#
1}"
1z"
0&#
1##
1~"
0'#
0$#
#360000
0)
0\
0w!
0A!
0x!
#370000
1)
1\
1w!
1A!
1x!
0a"
1e"
1}#
1{#
1r!
1p!
0"#
1%#
0x"
1{"
0("
1f"
0c"
0o"
1*!
1,!
1v!
0d"
0g"
0)"
0|"
0!#
0y"
1&#
0##
1&
1$
1/!
0~"
1'#
0v"
1"#
0}"
1*
0z"
1##
1$#
1~"
#380000
0)
0\
0w!
0A!
0x!
#390000
1)
1\
1w!
1A!
1x!
1N#
0*"
0e"
0O#
0F!
1G!
1g"
1("
0f"
1+"
1E"
1G"
0d
1c
0v!
1H"
0T"
0g"
1)"
0R
1Q
0/!
0*
#400000
0)
0\
0w!
0A!
0x!
#410000
1)
1\
1w!
1A!
1x!
1*"
1,"
0]#
0S!
1""
13"
0J"
1N"
1-"
0+"
0E"
0G"
0g
0H"
1T"
1#"
05
#420000
0)
0\
0w!
0A!
0x!
#430000
1)
1\
1w!
1A!
1x!
1W#
0,"
1."
1Q#
0S#
1V#
1/"
1C"
0-"
1$"
1D"
#440000
0)
0\
0w!
0A!
0x!
#450000
1)
1\
1w!
1A!
1x!
0."
10"
1q#
1w#
0s#
1v#
1_!
0b!
1^!
1d!
1O"
0t"
0w"
0K"
0"#
1p"
14"
1*#
12"
16"
0/"
0C"
1{
0x
1|
1v
0D"
1+#
1q"
0##
1x"
0u"
1B
1A
0>
1<
0r"
1y"
0~"
1n"
1(#
1v"
#460000
0)
0\
0w!
0A!
0x!
#470000
1)
1\
1w!
1A!
1x!
00"
1i#
17"
1o#
0j#
0[!
1V!
1\!
1F"
1]"
02"
06"
0o
1t
1n
12
0-
1,
#480000
0)
0\
0w!
0A!
0x!
#490000
1)
1\
1w!
1A!
1x!
07"
1^"
1_"
0]"
#500000
0)
0\
0w!
0A!
0x!
#510000
1)
1\
1w!
1A!
1x!
0^"
1`"
1g#
1e#
1b#
1a#
1=!
1l!
1k!
1h!
1f!
1c"
0_"
1~
1!!
1$!
1&!
1d"
1J
1H
1E
1D
11"
#520000
0)
0\
0w!
0A!
0x!
#530000
1)
1\
1w!
1A!
1x!
0`"
1e"
0=!
0("
0c"
0d"
0)"
01"
1f"
1v!
1g"
1/!
1*
#540000
0)
0\
0w!
0A!
0x!
#550000
1)
1\
1w!
1A!
1x!
0*"
0e"
1O#
1F!
0y!
1z!
0g"
1("
0f"
1+"
1E"
1G"
1d
0v!
1H"
0T"
1g"
1)"
1{!
1R
0/!
0*
#560000
0)
0\
0w!
0A!
0x!
#570000
1)
1\
1w!
1A!
1x!
1*"
1,"
1_#
1Q!
03"
1-"
0+"
0E"
0G"
1i
0H"
1T"
17
#580000
0)
0\
0w!
0A!
0x!
#590000
1)
1\
1w!
1A!
1x!
0,"
1."
0Q#
1/"
1C"
0-"
1D"
#600000
0)
0\
0w!
0A!
0x!
#610000
1)
1\
1w!
1A!
1x!
0."
10"
0q#
0d!
04"
0*#
12"
16"
0/"
0C"
0v
0D"
0+#
0<
0(#
#620000
0)
0\
0w!
0A!
0x!
#630000
1)
1\
1w!
1A!
1x!
00"
0i#
17"
0\!
1="
02"
06"
0n
1>"
0,
#640000
0)
0\
0w!
0A!
0x!
#650000
1)
1\
1w!
1A!
1x!
07"
1?"
1G"
0="
0>"
1H"
#660000
0)
0\
0w!
0A!
0x!
#670000
1)
1\
1w!
1A!
1x!
0?"
1@"
1]#
1S!
0""
13"
1J"
0N"
1A"
0G"
1g
0H"
15
#680000
0)
0\
0w!
0A!
0x!
#690000
1)
1\
1w!
1A!
1x!
1Q#
0@"
1B"
1S#
0V#
1C"
0A"
1D"
#700000
0)
0\
0w!
0A!
0x!
#710000
1)
1\
1w!
1A!
1x!
1q#
0B"
1s#
0v#
1b"
0_!
1b!
1d!
1c"
1o"
0'#
0O"
1t"
1w"
1K"
1"#
1##
0C"
14"
1*#
1+#
0{
1x
1v
1(#
0D"
1~"
0x"
0$#
1d"
0A
1>
1<
#720000
0)
0\
0w!
0A!
0x!
#730000
1)
1\
1w!
1A!
1x!
0b"
1e"
1!$
0~#
0|#
1y#
1t!
0q!
0o!
1n!
0*#
1-#
1|"
1!#
0t"
0p"
1s"
0("
1f"
0c"
0o"
1u"
0y"
1'#
1(!
0+!
0-!
1.!
1v!
1$#
0v"
1r"
0d"
0g"
0)"
1t"
0q"
0u"
0"#
1}"
1.#
0+#
1(
0'
0%
1"
1/!
0(#
1/#
1z"
0##
0r"
0n"
1u"
1*
1r"
0~"
1,#
#740000
0)
0\
0w!
0A!
0x!
#750000
1)
1\
1w!
1A!
1x!
0N#
1M#
0*"
0e"
0O#
0F!
1H!
0G!
1g"
1("
0f"
1+"
1E"
1G"
0{!
0|!
0z!
0d
1b
0c
0v!
1{!
1|!
1}!
1H"
0F"
0P"
0g"
1)"
0R
0Q
1P
0/!
0}!
0*
#760000
0)
0\
0w!
0A!
0x!
#770000
1)
1\
1w!
1A!
1x!
1*"
1,"
0_#
0^#
1"$
0R!
0Q!
0R"
1U"
0Z"
0#"
03"
0J"
1V"
1-"
0+"
0E"
0G"
0h
0i
0H"
1F"
1P"
1["
07
06
#780000
0)
0\
0w!
0A!
0x!
#790000
1)
1\
1w!
1A!
1x!
0W#
0,"
1."
0Q#
0S#
0U#
1T#
1R#
1W"
1/"
1C"
0-"
0$"
1D"
#800000
0)
0\
0w!
0A!
0x!
#810000
1)
1\
1w!
1A!
1x!
0."
10"
0q#
0w#
0s#
0u#
1t#
1r#
1c!
1a!
0`!
0b!
0^!
0d!
1\"
0&#
0)#
1X"
0|"
0!#
0S"
1x"
0{"
0K"
1"#
0%#
1p"
0s"
04"
1*#
0-#
12"
16"
0/"
0C"
1w
1y
0z
0x
0|
0v
0D"
0.#
1+#
0t"
1q"
1&#
1)#
1##
1|"
1!#
1y"
0"#
1%#
0}"
0*#
1-#
0'#
0B
0@
1?
0>
1=
0<
0$#
1.#
0+#
0z"
0&#
0)#
0##
1v"
1"#
0%#
1}"
1~"
1*#
0-#
1'#
1n"
0u"
1(#
0/#
0,#
0r"
1$#
0.#
1+#
1z"
1&#
1)#
1##
0~"
0*#
1-#
0'#
0(#
1/#
1,#
0$#
1.#
0+#
1~"
1*#
0-#
1'#
1(#
0/#
0,#
1$#
0.#
1+#
0(#
1/#
1,#
1(#
0/#
0,#
#820000
0)
0\
0w!
0A!
0x!
#830000
1)
1\
1w!
1A!
1x!
00"
17"
0o#
0n#
0m#
1l#
1j#
1[!
1Y!
0X!
0W!
0V!
1Y"
0T"
0P"
0F"
18"
02"
06"
1o
1q
0r
0s
0t
19"
02
01
00
1/
1-
#840000
0)
0\
0w!
0A!
0x!
#850000
1)
1\
1w!
1A!
1x!
07"
1:"
1G"
08"
09"
1H"
#860000
0)
0\
0w!
0A!
0x!
#870000
1)
1\
1w!
1A!
1x!
0:"
1;"
0]#
1\#
1T!
0S!
1I"
1Q"
1""
1R"
0U"
0["
0G"
1f
0g
0H"
0V"
1#"
0R"
05
14
#880000
0)
0\
0w!
0A!
0x!
#890000
1)
1\
1w!
1A!
1x!
1W#
0;"
1<"
0T#
0R#
0W"
1C"
1$"
1D"
#900000
0)
0\
0w!
0A!
0x!
#910000
1)
1\
1w!
1A!
1x!
0<"
1w#
0t#
0r#
1a"
0c!
0a!
1^!
1c"
1o"
0\"
0&#
0X"
0|"
0p"
1s"
0C"
0w
0y
1|
0D"
1t"
0q"
0}"
0'#
1d"
1B
0?
0=
0$#
0z"
0n"
1u"
1r"
#920000
0)
0\
0w!
0A!
0x!
#930000
1)
1\
1w!
1A!
1x!
0a"
1e"
0!$
1~#
1o!
0n!
0t"
0w"
1p"
0s"
0("
1f"
0c"
0o"
1-!
0.!
1v!
0d"
1g"
0)"
1t"
1w"
1q"
0x"
1{"
0u"
0(
1'
1/!
0r"
1|"
0y"
1n"
1x"
0{"
1u"
1*
1r"
0|"
1y"
0v"
1}"
1z"
1v"
0}"
0z"
#940000
0)
0\
0w!
0A!
0x!
#950000
1)
1\
1w!
1A!
1x!
0*"
0e"
1O#
1F!
1y!
0g"
1("
0f"
1+"
1E"
1G"
1d
0v!
1H"
1F"
1T"
0Y"
1g"
1)"
1R
0/!
0*
#960000
0)
0\
0w!
0A!
0x!
#970000
1)
1\
1w!
1A!
1x!
1*"
1,"
1_#
1]#
0\#
0T!
1S!
1Q!
0I"
0""
1U"
0#"
13"
1N"
0Q"
1-"
0+"
0E"
0G"
0f
1g
1i
0H"
0F"
0T"
1Y"
1V"
17
15
04
#980000
0)
0\
0w!
0A!
0x!
#990000
1)
1\
1w!
1A!
1x!
0W#
0,"
1."
1V#
1T#
1W"
1/"
1C"
0-"
0$"
1D"
#1000000
